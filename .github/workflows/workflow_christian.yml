name: workflow_christian.yml
on:
  push:
    branches:
      - master
jobs:

  build:
    name: 'Build and Analyze with SonarCloud'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Configurar Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # opciones: temurin, zulu, corretto, etc.
          java-version: '17'      # cambia a 11, 21 u otra versión si lo necesitas
          cache: 'maven'

      - name: Compilar con Maven
        run: mvn clean install -B
          
      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # para checks y PR decoration
          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
        run: |
          mvn -B org.sonarsource.scanner.maven:sonar-maven-plugin:sonar  \
            -Dsonar.organization=${SONAR_ORGANIZATION} \
            -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
            -Dsonar.token="${SONAR_TOKEN}" \
            -Dsonar.host.url="https://sonarcloud.io" \
            -Dsonar.coverage.jacoco.xmlReportPaths="target/site/jacoco/jacoco.xml"

  ui-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # opciones: temurin, zulu, corretto, etc.
          java-version: '17'      # cambia a 11, 21 u otra versión si lo necesitas
          cache: 'maven'

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1

      - name: Build image (Dockerfile)
        run: |
          docker version
          docker build -t horas:horas .

      - name: Check Docker Compose
        run: docker compose version

      - name: Up (docker compose)
        run: |
          docker compose up -d --build
          for i in {1..60}; do
            if curl -fsS http://localhost:8080/horas >/dev/null 2>&1; then
              echo "App arriba"; break; fi
            echo "Esperando app... ($i)"; sleep 2;
          done

      - name: Run UI tests (Selenium)
        env:
          BASE_URL: http://localhost:8080/horas
        run: mvn -B -Dtest=CalculadoraUITest test

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports-compose
          path: target/surefire-reports

      - name: Logs (on failure)
        if: failure()
        run: docker compose logs --no-color > compose-logs.txt

      - name: Upload compose logs (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: compose-logs
          path: compose-logs.txt

      - name: Down
        if: always()
        run: docker compose down -v
